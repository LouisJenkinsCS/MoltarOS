#ifndef MOLTAROS_KEYBOARD_H
#define MOLTAROS_KEYBOARD_H

#import <stdint.h>

#define KBD_PORT 0x60
#define RELEASE_MASK 0x80
#define KBD_NSCANS 0x80
#define KBD_ESCAPED_NSCANS 0xE0

/*
    Character Codes: The layout is based on my work laptop's keyboard layout.
*/
enum {
    KBD_KEY_ESC = 0x1, 
    KBD_KEY_F1, 
    KBD_KEY_F2, 
    KBD_KEY_F3, 
    KBD_KEY_F4, 
    KBD_KEY_F5, 
    KBD_KEY_F6,
    KBD_KEY_F7, 
    KBD_KEY_F8, 
    KBD_KEY_F9, 
    KBD_KEY_F10, 
    KBD_KEY_F11, 
    KBD_KEY_F12, 
    KBD_KEY_PRTSCR,
    KBD_KEY_SCROLL_LOCK, 
    KBD_KEY_PAUSE, 
    KBD_KEY_INSERT, 
    KBD_KEY_DELETE, 
    KBD_KEY_PAGE_UP, 
    KBD_KEY_PAGE_DOWN,
    KBD_KEY_GRAVE_ACCENT, 
    KBD_KEY_1, 
    KBD_KEY_2, 
    KBD_KEY_3, 
    KBD_KEY_4, 
    KBD_KEY_5, 
    KBD_KEY_6, 
    KBD_KEY_7, 
    KBD_KEY_8, 
    KBD_KEY_9,
    KBD_KEY_0, 
    KBD_KEY_MINUS, 
    KBD_KEY_EQUALS, 
    KBD_KEY_BACKSPACE, 
    KBD_KEY_NUMLOCK, 
    KBD_KP_KEY_SLASH, 
    KBD_KP_KEY_ASTERISK,
    KBD_KP_KEY_MINUS, 
    KBD_KEY_TAB, 
    KBD_KEY_Q, 
    KBD_KEY_W, 
    KBD_KEY_E, 
    KBD_KEY_R, 
    KBD_KEY_T, 
    KBD_KEY_Y, 
    KBD_KEY_U, 
    KBD_KEY_I, 
    KBD_KEY_O,
    KBD_KEY_P, 
    KBD_KEY_LBRACKET, 
    KBD_KEY_RBRACKET, 
    KBD_KEY_BACK_SLASH, 
    KBD_KP_KEY_7, 
    KBD_KP_KEY_8, 
    KBD_KP_KEY_9, 
    KBD_KP_KEY_PLUS,
    KBD_KEY_CAPS_LOCK, 
    KBD_KEY_A, 
    KBD_KEY_S, 
    KBD_KEY_D, 
    KBD_KEY_F, 
    KBD_KEY_G, 
    KBD_KEY_H, 
    KBD_KEY_J, 
    KBD_KEY_K, 
    KBD_KEY_L, 
    KBD_KEY_SEMICOLON,
    KBD_KEY_APOSTROPH, 
    KBD_KEY_ENTER, 
    KBD_KP_KEY_4, 
    KBD_KP_KEY_5, 
    KBD_KP_KEY_6, 
    KBD_KEY_LSHIFT, 
    KBD_KEY_Z, 
    KBD_KEY_X, 
    KBD_KEY_C,
    KBD_KEY_V, 
    KBD_KEY_B, 
    KBD_KEY_N, 
    KBD_KEY_M, 
    KBD_KEY_COMMA, 
    KBD_KEY_PERIOD, 
    KBD_KEY_SLASH, 
    KBD_KEY_RSHIFT, 
    KBD_KEY_UP, 
    KBD_KP_KEY_1,
    KBD_KP_KEY_2, 
    KBD_KP_KEY_3, 
    KBD_KP_KEY_ENTER, 
    KBD_KEY_LCTRL, 
    KBD_KEY_FN, 
    KBD_KEY_LALT, 
    KBD_KEY_SPACE, 
    KBD_KEY_BACK_SLASH2,
    KBD_KEY_RALT, 
    KBD_KEY_SUPER, 
    KBD_KEY_RCTRL, 
    KBD_KEY_LEFT, 
    KBD_KEY_DOWN, 
    KBD_KEY_RIGHT, 
    KBD_KP_KEY_0, 
    KBD_KP_KEY_PERIOD
};

static const uint8_t KBD_SCAN_TABLE[KBD_NSCANS] = {
    [0x01] = KBD_KEY_ESC, 
    [0x02] = KBD_KEY_1, 
    [0x03] = KBD_KEY_2,
    [0x04] = KBD_KEY_3,
    [0x05] = KBD_KEY_4,
    [0x06] = KBD_KEY_5,
    [0x07] = KBD_KEY_6,
    [0x08] = KBD_KEY_7,
    [0x09] = KBD_KEY_8,
    [0x0A] = KBD_KEY_9,
    [0x0B] = KBD_KEY_0,
    [0x0C] = KBD_KEY_MINUS,
    [0x0D] = KBD_KEY_EQUALS,
    [0x0E] = KBD_KEY_BACKSPACE,
    [0x0F] = KBD_KEY_TAB,
    [0x10] = KBD_KEY_Q,
    [0x11] = KBD_KEY_W,
    [0x12] = KBD_KEY_E,
    [0x13] = KBD_KEY_R,
    [0x14] = KBD_KEY_T,
    [0x15] = KBD_KEY_Y,
    [0x16] = KBD_KEY_U,
    [0x17] = KBD_KEY_I,
    [0x18] = KBD_KEY_O,
    [0x19] = KBD_KEY_P,
    [0x1A] = KBD_KEY_LBRACKET,
    [0x1B] = KBD_KEY_RBRACKET,
    [0x1C] = KBD_KEY_ENTER,
    [0x1D] = KBD_KEY_LCTRL,
    [0x1E] = KBD_KEY_A,
    [0x1F] = KBD_KEY_S,
    [0x20] = KBD_KEY_D,
    [0x21] = KBD_KEY_F,
    [0x22] = KBD_KEY_G,
    [0x23] = KBD_KEY_H,
    [0x24] = KBD_KEY_J,
    [0x25] = KBD_KEY_K,
    [0x26] = KBD_KEY_L,
    [0x27] = KBD_KEY_SEMICOLON,
    [0x28] = KBD_KEY_APOSTROPH,
    [0x29] = KBD_KEY_GRAVE_ACCENT,
    [0x2A] = KBD_KEY_LSHIFT,
    [0x2B] = KBD_KEY_BACK_SLASH,
    [0x2C] = KBD_KEY_Z,
    [0x2D] = KBD_KEY_X,
    [0x2E] = KBD_KEY_C,
    [0x2F] = KBD_KEY_V,
    [0x30] = KBD_KEY_B,
    [0x31] = KBD_KEY_N,
    [0x32] = KBD_KEY_M,
    [0x33] = KBD_KEY_COMMA,
    [0x34] = KBD_KEY_PERIOD,
    [0x35] = KBD_KEY_SLASH,
    [0x36] = KBD_KEY_RSHIFT,
    [0x37] = KBD_KP_KEY_ASTERISK,
    [0x38] = KBD_KEY_LALT,
    [0x39] = KBD_KEY_SPACE,
    [0x3A] = KBD_KEY_CAPS_LOCK,
    [0x3B] = KBD_KEY_F1,
    [0x3C] = KBD_KEY_F2,
    [0x3D] = KBD_KEY_F3,
    [0x3E] = KBD_KEY_F4,
    [0x3F] = KBD_KEY_F5,
    [0x40] = KBD_KEY_F6,
    [0x41] = KBD_KEY_F7,
    [0x42] = KBD_KEY_F8,
    [0x43] = KBD_KEY_F9,
    [0x44] = KBD_KEY_F10,
    [0x45] = KBD_KEY_NUMLOCK,
    [0x46] = KBD_KEY_SCROLL_LOCK,
    [0x47] = KBD_KP_KEY_7,
    [0x48] = KBD_KP_KEY_8,
    [0x49] = KBD_KP_KEY_9,
    [0x4A] = KBD_KP_KEY_MINUS,
    [0x4B] = KBD_KP_KEY_4,
    [0x4C] = KBD_KP_KEY_5,
    [0x4D] = KBD_KP_KEY_6,
    [0x4E] = KBD_KP_KEY_PLUS,
    [0x4F] = KBD_KP_KEY_1,
    [0x50] = KBD_KP_KEY_2,
    [0x51] = KBD_KP_KEY_3,
    [0x52] = KBD_KP_KEY_0,
    [0x53] = KBD_KP_KEY_PERIOD,
    [0x57] = KBD_KEY_F11,
    [0x58] = KBD_KEY_F12
};

static const uint8_t KBD_ESCAPED_SCAN_TABLE[KBD_NSCANS] = {
    [0x1C] = KBD_KP_KEY_ENTER,
    [0x1D] = KBD_KEY_RCTRL,
    [0x35] = KBD_KP_KEY_SLASH,
    [0x38] = KBD_KEY_RALT,
    [0x48] = KBD_KEY_UP,
    [0x49] = KBD_KEY_PAGE_UP,
    [0x4B] = KBD_KEY_LEFT,
    [0x4D] = KBD_KEY_RIGHT,
    [0x4F] = KBD_KEY_PAGE_DOWN,
    [0x50] = KBD_KEY_DOWN,
    [0x51] = KBD_KEY_PAGE_DOWN,
    [0x52] = KBD_KEY_INSERT,
    [0x53] = KBD_KEY_DELETE
};

void keyboard_init();

#endif /* endif MOLTAROS_KEYBOARD_H */